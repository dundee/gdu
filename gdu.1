.\" Automatically generated by Pandoc 3.1.11.1
.\"
.TH "gdu" "1" "2024\-12\-30" "" ""
.SH NAME
gdu \- Pretty fast disk usage analyzer written in Go
.SH SYNOPSIS
\f[B]gdu [flags] [directory_to_scan]\f[R]
.SH DESCRIPTION
Pretty fast disk usage analyzer written in Go.
.PP
Gdu is intended primarily for SSD disks where it can fully utilize
parallel processing.
However HDDs work as well, but the performance gain is not so huge.
.SH OPTIONS
\f[B]\-h\f[R], \f[B]\-\-help\f[R][=false] help for gdu
.PP
\f[B]\-i\f[R], \f[B]\-\-ignore\-dirs\f[R]=[/proc,/dev,/sys,/run]
Absolute paths to ignore (separated by comma)
.PP
\f[B]\-I\f[R], \f[B]\-\-ignore\-dirs\-pattern\f[R] Absolute path
patterns to ignore (separated by comma)
.PP
\f[B]\-X\f[R], \f[B]\-\-ignore\-from\f[R] Read absolute path patterns to
ignore from file
.PP
\f[B]\-l\f[R], \f[B]\-\-log\-file\f[R]=\[dq]/dev/null\[dq] Path to a
logfile
.PP
\f[B]\-m\f[R], \f[B]\-\-max\-cores\f[R] Set max cores that Gdu will use.
.PP
\f[B]\-c\f[R], \f[B]\-\-no\-color\f[R][=false] Do not use colorized
output
.PP
\f[B]\-x\f[R], \f[B]\-\-no\-cross\f[R][=false] Do not cross filesystem
boundaries
.PP
\f[B]\-H\f[R], \f[B]\-\-no\-hidden\f[R][=false] Ignore hidden
directories (beginning with dot)
.PP
\f[B]\-L\f[R], \f[B]\-\-follow\-symlinks\f[R][=false] Follow symlinks
for files, i.e.\ show the size of the file to which symlink points to
(symlinks to directories are not followed)
.PP
\f[B]\-n\f[R], \f[B]\-\-non\-interactive\f[R][=false] Do not run in
interactive mode
.PP
\f[B]\-p\f[R], \f[B]\-\-no\-progress\f[R][=false] Do not show progress
in non\-interactive mode
.PP
\f[B]\-u\f[R], \f[B]\-\-no\-unicode\f[R][=false] Do not use Unicode
symbols (for size bar)
.PP
\f[B]\-s\f[R], \f[B]\-\-summarize\f[R][=false] Show only a total in
non\-interactive mode
.PP
\f[B]\-t\f[R], \f[B]\-\-top\f[R][=0] Show only top X largest files in
non\-interactive mode
.PP
\f[B]\-d\f[R], \f[B]\-\-show\-disks\f[R][=false] Show all mounted disks
.PP
\f[B]\-a\f[R], \f[B]\-\-show\-apparent\-size\f[R][=false] Show apparent
size
.PP
\f[B]\-C\f[R], \f[B]\-\-show\-item\-count\f[R][=false] Show number of
items in directory
.PP
\f[B]\-M\f[R], \f[B]\-\-show\-mtime\f[R][=false] Show latest mtime of
items in directory
.PP
\f[B]\-\-si\f[R][=false] Show sizes with decimal SI prefixes (kB, MB,
GB) instead of binary prefixes (KiB, MiB, GiB)
.PP
\f[B]\-\-no\-prefix\f[R][=false] Show sizes as raw numbers without any
prefixes (SI or binary) in non\-interactive mode
.PP
\f[B]\-\-no\-mouse\f[R][=false] Do not use mouse
.PP
\f[B]\-\-no\-delete\f[R][=false] Do not allow deletions
.PP
\f[B]\-f\f[R], \f[B]\-\-input\-file\f[R] Import analysis from JSON file.
If the file is \[dq]\-\[dq], read from standard input.
.PP
\f[B]\-o\f[R], \f[B]\-\-output\-file\f[R] Export all info into file as
JSON.
If the file is \[dq]\-\[dq], write to standard output.
.PP
\f[B]\-\-config\-file\f[R]=\[dq]$HOME/.gdu.yaml\[dq] Read config from
file
.PP
\f[B]\-\-write\-config\f[R][=false] Write current configuration to file
(default is $HOME/.gdu.yaml)
.PP
\f[B]\-g\f[R], \f[B]\-\-const\-gc\f[R][=false] Enable memory garbage
collection during analysis with constant level set by GOGC
.PP
\f[B]\-\-enable\-profiling\f[R][=false] Enable collection of profiling
data and provide it on http://localhost:6060/debug/pprof/
.PP
\f[B]\-\-use\-storage\f[R][=false] Use persistent key\-value storage for
analysis data (experimental)
.PP
\f[B]\-r\f[R], \f[B]\-\-read\-from\-storage\f[R][=false] Read analysis
data from persistent key\-value storage
.PP
\f[B]\-v\f[R], \f[B]\-\-version\f[R][=false] Print version
.SH FILE FLAGS
Files and directories may be prefixed by a one\-character flag with
following meaning:
.TP
\f[B]!\f[R]
An error occurred while reading this directory.
.TP
\f[B].\f[R]
An error occurred while reading a subdirectory, size may be not correct.
.TP
\f[B]\[at]\f[R]
File is symlink or socket.
.TP
\f[B]H\f[R]
Same file was already counted (hard link).
.TP
\f[B]e\f[R]
Directory is empty.
